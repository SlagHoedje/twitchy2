name: CI

on:
    push:
        branches:
            - master
            - react
    pull_request:
        branches:
            - master
            - react

jobs:
    eslint-prettier:
        name: Run ESLint and Prettier
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Set up Node.js
              uses: actions/setup-node@v2

            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"

            - name: Cache node_modules
              uses: actions/cache@v2.1.4
              id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Install dependencies
              run: yarn

            - name: Run linters
              uses: wearerequired/lint-action@v1
              with:
                  eslint: true
                  eslint_args: '--ignore-path .gitignore'
                  eslint_extensions: 'html,ts,tsx'
                  prettier: true
                  prettier_args: '--ignore-path .gitignore --plugin-search-dir=.'

    clippy:
        name: Run Clippy
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Install dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0

            - name: Install toolchain
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  components: clippy
                  override: true

            - name: Create build directory
              run: mkdir build

            - name: Run Cargo Clippy
              uses: actions-rs/cargo@v1
              with:
                  command: clippy
                  args: --manifest-path=src-tauri/Cargo.toml -- -D warnings
